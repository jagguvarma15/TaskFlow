services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: taskflow_postgres
    environment:
      POSTGRES_DB: taskflow
      POSTGRES_USER: taskflow
      POSTGRES_PASSWORD: taskflow_password
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U taskflow"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - taskflow_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: taskflow_redis
    command: redis-server --requirepass redispass
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "redispass", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - taskflow_network

  # Backend API
  backend:
    build:
      context: ./backend
      target: production
    image: taskflow-backend
    container_name: taskflow_backend
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: production
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: taskflow
      DB_PASSWORD: taskflow_password
      DB_NAME: taskflow
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: redispass
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - taskflow_network

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      target: production
    image: taskflow-frontend
    container_name: taskflow_frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - taskflow_network

  # Development profile - Frontend with hot reload
  frontend-dev:
    profiles: ["dev"]
    build:
      context: ./frontend
      target: development
    image: taskflow-frontend-dev
    container_name: taskflow_frontend_dev
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
    environment:
      - WATCHPACK_POLLING=true
    depends_on:
      - backend
    networks:
      - taskflow_network

volumes:
  postgres_data:
  redis_data:

networks:
  taskflow_network:
    driver: bridge